spring.application.name=library-server
server.port=9000

# Database Configuration
spring.datasource.url=jdbc:postgresql://localhost:5432/postgres
spring.datasource.username=postgres
spring.datasource.password=root123
spring.datasource.driver-class-name=org.postgresql.Driver
spring.jpa.hibernate.ddl-auto=create-drop
spring.sql.init.mode=never
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.format_sql=true
spring.jpa.properties.hibernate.jdbc.lob.non_contextual_create=true
spring.jpa.properties.hibernate.enable_lazy_load_no_trans=true

# PostgreSQL Hikari Configuration
spring.datasource.hikari.maximum-pool-size=10
spring.datasource.hikari.minimum-idle=5
spring.datasource.hikari.idle-timeout=30000
spring.datasource.hikari.max-lifetime=1800000
spring.datasource.hikari.connection-timeout=30000

# Spring Security OAuth2 Google
spring.security.oauth2.client.registration.google.client-id=1022768905770-v5lfdgvcrlgs8je6m0mkokun79k0n9vh.apps.googleusercontent.com
spring.security.oauth2.client.registration.google.client-secret=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
spring.security.oauth2.client.registration.google.scope=profile,email
spring.security.oauth2.client.provider.google.authorization-uri=https://accounts.google.com/o/oauth2/auth
spring.security.oauth2.client.provider.google.token-uri=https://oauth2.googleapis.com/token
spring.security.oauth2.client.provider.google.user-info-uri=https://www.googleapis.com/oauth2/v3/userinfo
spring.security.oauth2.client.provider.google.jwk-set-uri=https://www.googleapis.com/oauth2/v3/certs
spring.security.oauth2.client.registration.google.redirect-uri=http://localhost:9000/api/auth/login/oauth2/code/google

# File Upload
spring.servlet.multipart.enabled=true
spring.servlet.multipart.max-file-size=100MB
spring.servlet.multipart.max-request-size=100MB
file.upload-pdf-dir=uploads/pdfs/
file.upload-image-dir=uploads/images/

# JWT Secret Key
app.jwtSecretKey=library
app.jwtExpirationHours=24
